{"ast":null,"code":"import { useReducer, useState, useEffect, createElement } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar styles = {\n  \"progress-bar-wrapper\": \"_53Ji7\",\n  \"step-progress-bar\": \"_1Lo2h\",\n  \"progress-step\": \"_2Jtxm\",\n  \"step-index\": \"_2kL0S\",\n  \"step-icon\": \"_2JvrO\",\n  \"step-label\": \"_1hzhf\",\n  \"completed\": \"_2ZUAI\",\n  \"spring-down\": \"_3SDnc\",\n  \"current\": \"_35Ago\",\n  \"spring-up\": \"_JAh3L\",\n  \"has-error\": \"_1CcaK\",\n  \"shake\": \"_1ujce\",\n  \"step-content\": \"_2_g61\",\n  \"step-buttons\": \"_3uApM\",\n  \"step-action-btn\": \"_2pGos\",\n  \"action-btn-secondary\": \"_3CDiP\",\n  \"action-btn-primary\": \"_hsN1w\",\n  \"disabled\": \"_2RWmX\"\n};\nvar StepStates;\n\n(function (StepStates) {\n  StepStates[\"NOT_STARTED\"] = \"not_started\";\n  StepStates[\"CURRENT\"] = \"current\";\n  StepStates[\"ERROR\"] = \"error\";\n  StepStates[\"COMPLETED\"] = \"completed\";\n})(StepStates || (StepStates = {}));\n\nfunction stepsReducer(steps, action) {\n  return steps.map(function (step, i) {\n    if (i < action.payload.index) {\n      return _extends({}, step, {\n        state: StepStates.COMPLETED\n      });\n    } else if (i === action.payload.index) {\n      return _extends({}, step, {\n        state: action.payload.state\n      });\n    } else {\n      step.state = StepStates.NOT_STARTED;\n      return step;\n    }\n  });\n}\n\nfunction StepProgressBar(props) {\n  var steps = props.steps,\n      startingStep = props.startingStep,\n      wrapperClass = props.wrapperClass,\n      progressClass = props.progressClass,\n      stepClass = props.stepClass,\n      contentClass = props.contentClass,\n      buttonWrapperClass = props.buttonWrapperClass,\n      primaryBtnClass = props.primaryBtnClass,\n      secondaryBtnClass = props.secondaryBtnClass;\n\n  var _React$useReducer = useReducer(stepsReducer, steps),\n      state = _React$useReducer[0],\n      dispatch = _React$useReducer[1];\n\n  var _React$useState = useState(startingStep),\n      currentIndex = _React$useState[0],\n      setCurrentIndex = _React$useState[1];\n\n  useEffect(function () {\n    dispatch({\n      type: 'init',\n      payload: {\n        index: currentIndex,\n        state: StepStates.CURRENT\n      }\n    });\n  }, []);\n\n  function nextHandler() {\n    var isStateValid = true;\n    var stepValidator = state[currentIndex].validator;\n\n    if (stepValidator) {\n      isStateValid = stepValidator();\n    }\n\n    dispatch({\n      type: 'next',\n      payload: {\n        index: isStateValid ? currentIndex + 1 : currentIndex,\n        state: isStateValid ? StepStates.CURRENT : StepStates.ERROR\n      }\n    });\n\n    if (isStateValid) {\n      setCurrentIndex(currentIndex + 1);\n    }\n  }\n\n  function prevHandler() {\n    dispatch({\n      type: 'previous',\n      payload: {\n        index: currentIndex - 1,\n        state: StepStates.CURRENT\n      }\n    });\n    setCurrentIndex(currentIndex - 1);\n  }\n\n  return createElement(\"div\", {\n    className: styles['progress-bar-wrapper'] + \" \" + (wrapperClass || '')\n  }, createElement(\"ul\", {\n    className: styles['step-progress-bar'] + \" \" + (progressClass || '')\n  }, state.map(function (step, i) {\n    return createElement(\"li\", {\n      key: i,\n      className: \"\" + styles['progress-step'] + (step.state === StepStates.COMPLETED ? \" \" + styles.completed : '') + (step.state === StepStates.CURRENT ? \" \" + styles.current : '') + (step.state === StepStates.ERROR ? \" \" + styles['has-error'] : '') + \" \" + (stepClass || '')\n    }, step.state === StepStates.COMPLETED && createElement(\"span\", {\n      className: styles['step-icon']\n    }, createElement(\"svg\", {\n      width: \"1.5rem\",\n      viewBox: \"0 0 13 9\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }, createElement(\"path\", {\n      d: \"M1 3.5L4.5 7.5L12 1\",\n      stroke: \"white\",\n      \"stroke-width\": \"1.5\"\n    }))), step.state === StepStates.ERROR && createElement(\"span\", {\n      className: styles['step-icon']\n    }, \"!\"), step.state !== StepStates.COMPLETED && step.state !== StepStates.ERROR && createElement(\"span\", {\n      className: styles['step-index']\n    }, i + 1), createElement(\"span\", {\n      className: styles['step-label']\n    }, step.label));\n  })), createElement(\"div\", {\n    className: styles['step-content'] + \" \" + (contentClass || '')\n  }, state[currentIndex].content), createElement(\"div\", {\n    className: styles['step-buttons'] + \" \" + (buttonWrapperClass || '')\n  }, createElement(\"a\", {\n    className: styles['step-action-btn'] + \" \" + styles['action-btn-secondary'] + \" \" + (currentIndex === 0 ? styles.disabled : '') + \" \" + (secondaryBtnClass || ''),\n    onClick: prevHandler\n  }, \"Previous\"), createElement(\"a\", {\n    className: styles['step-action-btn'] + \" \" + styles['action-btn-primary'] + \" \" + (currentIndex === state.length - 1 ? styles.disabled : '') + \" \" + (primaryBtnClass || ''),\n    onClick: nextHandler\n  }, \"Next\")));\n}\n\nexport default StepProgressBar;","map":{"version":3,"mappings":"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","names":["StepStates","stepsReducer","steps","action","map","step","i","payload","index","state","COMPLETED","NOT_STARTED","StepProgressBar","props","startingStep","wrapperClass","progressClass","stepClass","contentClass","buttonWrapperClass","primaryBtnClass","secondaryBtnClass","React","dispatch","currentIndex","setCurrentIndex","type","CURRENT","nextHandler","isStateValid","stepValidator","validator","ERROR","prevHandler","className","styles","key","completed","current","width","viewBox","fill","xmlns","d","stroke","label","content","disabled","onClick","length"],"sources":["C:\\Users\\Luke\\Desktop\\MERN Project\\frontend\\node_modules\\react-step-progress\\src\\models\\index.ts","C:\\Users\\Luke\\Desktop\\MERN Project\\frontend\\node_modules\\react-step-progress\\src\\index.tsx"],"sourcesContent":["export enum StepStates {\n  NOT_STARTED = 'not_started',\n  CURRENT = 'current',\n  ERROR = 'error',\n  COMPLETED = 'completed'\n}\n\nexport interface ProgressStep {\n  label: string;\n  name: string;\n  state?: StepStates;\n  content: React.ReactNode;\n  validator?: (payload?: any) => boolean;\n}\n\nexport interface StepProgressProps {\n  steps: ProgressStep[];\n  startingStep: number;\n  wrapperClass?: string;\n  progressClass?: string;\n  stepClass?: string;\n  contentClass?: string;\n  buttonWrapperClass?: string;\n  primaryBtnClass?: string;\n  secondaryBtnClass?: string;\n}\n\nexport interface ReducerAction {\n  type: string;\n  payload: { index: number; state: StepStates };\n}\n","import * as React from 'react';\nimport styles from './styles.module.css';\n\nimport { StepStates, ProgressStep, StepProgressProps, ReducerAction } from './models';\n\nfunction stepsReducer(steps: ProgressStep[], action: ReducerAction): ProgressStep[] {\n\n  return steps.map(function(step, i) {\n\n    if (i < action.payload.index) {\n      return { ...step, state: StepStates.COMPLETED };\n    } else if (i === action.payload.index) {\n      return { ...step, state: action.payload.state };\n    } else {\n      step.state = StepStates.NOT_STARTED;\n      return step;\n    }\n  });\n}\n\nfunction StepProgressBar(props: StepProgressProps): JSX.Element {\n  const {\n    steps,\n    startingStep,\n    wrapperClass,\n    progressClass,\n    stepClass,\n    contentClass,\n    buttonWrapperClass,\n    primaryBtnClass,\n    secondaryBtnClass\n  } = props;\n  const [state, dispatch] = React.useReducer(stepsReducer, steps);\n  const [currentIndex, setCurrentIndex] = React.useState(startingStep);\n\n  React.useEffect(function () {\n    dispatch({\n      type: 'init',\n      payload: { index: currentIndex, state: StepStates.CURRENT }\n    });\n  }, []);\n\n  function nextHandler(): void {\n    let isStateValid = true;\n    const stepValidator = state[currentIndex].validator;\n\n    if (stepValidator) {\n      isStateValid = stepValidator();\n    }\n    dispatch({\n      type: 'next',\n      payload: {\n        index: isStateValid ? currentIndex + 1 : currentIndex,\n        state: isStateValid ? StepStates.CURRENT : StepStates.ERROR\n      }\n    });\n\n    if (isStateValid) {\n      setCurrentIndex(currentIndex + 1);\n    }\n  }\n\n  function prevHandler(): void {\n    dispatch({\n      type: 'previous',\n      payload: {\n        index: currentIndex - 1,\n        state: StepStates.CURRENT\n      }\n    });\n    setCurrentIndex(currentIndex - 1);\n  }\n\n  return (\n    <div className={`${styles['progress-bar-wrapper']} ${wrapperClass || ''}`}>\n      <ul className={`${styles['step-progress-bar']} ${progressClass || ''}`}>\n        {state.map(function(step, i) {\n          return (\n            <li\n              key={i}\n              className={`${\n                styles['progress-step']\n              }${\n                step.state === StepStates.COMPLETED ? ` ${styles.completed}` : ''\n              }${\n                step.state === StepStates.CURRENT ? ` ${styles.current}` : ''\n              }${\n                step.state === StepStates.ERROR ? ` ${styles['has-error']}` : ''\n              } ${\n                stepClass || ''\n              }`}\n            >\n              {step.state === StepStates.COMPLETED && (\n                <span className={styles['step-icon']}>\n                  <svg\n                    width=\"1.5rem\"\n                    viewBox=\"0 0 13 9\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path d=\"M1 3.5L4.5 7.5L12 1\" stroke=\"white\" stroke-width=\"1.5\"></path>\n                  </svg>\n                </span>\n              )}\n              {step.state === StepStates.ERROR && <span className={styles['step-icon']}>!</span>}\n              {step.state !== StepStates.COMPLETED && step.state !== StepStates.ERROR && (\n                <span className={styles['step-index']}>{i + 1}</span>\n              )}\n              <span className={styles['step-label']}>{step.label}</span>\n            </li>\n          );\n        })}\n      </ul>\n\n      <div className={`${styles['step-content']} ${contentClass || ''}`}>\n        {state[currentIndex].content}\n      </div>\n\n      <div className={`${styles['step-buttons']} ${buttonWrapperClass || ''}`}>\n        <a\n          className={`${\n            styles['step-action-btn']\n          } ${\n            styles['action-btn-secondary']\n          } ${\n            currentIndex === 0 ? styles.disabled : ''\n          } ${\n            secondaryBtnClass || ''\n          }`}\n          onClick={prevHandler}\n        >\n          Previous\n        </a>\n        <a\n          className={`${\n            styles['step-action-btn']\n          } ${\n            styles['action-btn-primary']\n          } ${\n            currentIndex === state.length - 1 ? styles.disabled : ''\n          } ${\n            primaryBtnClass || ''\n          }`}\n          onClick={nextHandler}\n        >\n          Next\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default StepProgressBar;\n"]},"metadata":{},"sourceType":"module"}