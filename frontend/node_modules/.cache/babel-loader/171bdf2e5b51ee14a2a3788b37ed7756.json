{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authService from './authService'; // Get user from local storage\n\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = {\n  user: null ? user : null,\n  isError: false,\n  isSucces: false,\n  isLoading: false,\n  message: ''\n}; //Register User\n\nexport const register = createAsyncThunk('auth/register', async (user, thunkAPI) => {\n  try {\n    return await authService.register(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSucces = false;\n      state.message = '';\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSucces = true;\n      state.user = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    });\n  }\n}); // export const logout = createAsyncThunk('auth/logout', async () => {await aith})\n// export const {reset} = authSlice.actions\n// export default authSlice.reducer","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","user","JSON","parse","localStorage","getItem","initialState","isError","isSucces","isLoading","message","register","thunkAPI","error","response","data","toString","rejectWithValue","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected"],"sources":["C:/Users/Luke/Desktop/MERN Project/frontend/src/components/features/auth/authSlice.js"],"sourcesContent":["import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\r\nimport authService from './authService';\r\n\r\n// Get user from local storage\r\nconst user = JSON.parse(localStorage.getItem('user'))\r\n\r\nconst initialState = {\r\n    user: null ? user : null,\r\n    isError: false,\r\n    isSucces: false,\r\n    isLoading: false,\r\n    message: '',\r\n}\r\n\r\n//Register User\r\nexport const register = createAsyncThunk('auth/register', async(user, thunkAPI) => {\r\n        try {\r\n            return await authService.register(user)\r\n        } catch (error) {\r\n            const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\r\n            return thunkAPI.rejectWithValue(message);\r\n    }\r\n})\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: { \r\n        reset: (state) => {\r\n            state.isLoading = false\r\n            state.isError = false\r\n            state.isSucces = false\r\n            state.message = ''\r\n        }\r\n\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(register.pending, (state) => {\r\n                state.isLoading = true\r\n            })\r\n            .addCase(register.fulfilled, (state,action) => {\r\n                state.isLoading = false\r\n                state.isSucces = true\r\n                state.user = action.payload\r\n            })\r\n            .addCase(register.rejected, (state, action) => {\r\n                state.isLoading = false\r\n                state.isError = true\r\n                state.message = action.payload\r\n                state.user = null\r\n            })\r\n    }\r\n})\r\n\r\n// export const logout = createAsyncThunk('auth/logout', async () => {await aith})\r\n\r\n// export const {reset} = authSlice.actions\r\n// export default authSlice.reducer"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,gBAArB,QAA4C,kBAA5C;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAEA;;AACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AAEA,MAAMC,YAAY,GAAG;EACjBL,IAAI,EAAE,OAAOA,IAAP,GAAc,IADH;EAEjBM,OAAO,EAAE,KAFQ;EAGjBC,QAAQ,EAAE,KAHO;EAIjBC,SAAS,EAAE,KAJM;EAKjBC,OAAO,EAAE;AALQ,CAArB,C,CAQA;;AACA,OAAO,MAAMC,QAAQ,GAAGZ,gBAAgB,CAAC,eAAD,EAAkB,OAAME,IAAN,EAAYW,QAAZ,KAAyB;EAC3E,IAAI;IACA,OAAO,MAAMZ,WAAW,CAACW,QAAZ,CAAqBV,IAArB,CAAb;EACH,CAFD,CAEE,OAAOY,KAAP,EAAc;IACZ,MAAMH,OAAO,GAAIG,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeC,IAAjC,IAAyCF,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBL,OAA9D,IAA0EG,KAAK,CAACH,OAAhF,IAA2FG,KAAK,CAACG,QAAN,EAA3G;IACA,OAAOJ,QAAQ,CAACK,eAAT,CAAyBP,OAAzB,CAAP;EACP;AACJ,CAPuC,CAAjC;AASP,OAAO,MAAMQ,SAAS,GAAGpB,WAAW,CAAC;EACjCqB,IAAI,EAAE,MAD2B;EAEjCb,YAFiC;EAGjCc,QAAQ,EAAE;IACNC,KAAK,EAAGC,KAAD,IAAW;MACdA,KAAK,CAACb,SAAN,GAAkB,KAAlB;MACAa,KAAK,CAACf,OAAN,GAAgB,KAAhB;MACAe,KAAK,CAACd,QAAN,GAAiB,KAAjB;MACAc,KAAK,CAACZ,OAAN,GAAgB,EAAhB;IACH;EANK,CAHuB;EAYjCa,aAAa,EAAGC,OAAD,IAAa;IACxBA,OAAO,CACFC,OADL,CACad,QAAQ,CAACe,OADtB,EACgCJ,KAAD,IAAW;MAClCA,KAAK,CAACb,SAAN,GAAkB,IAAlB;IACH,CAHL,EAIKgB,OAJL,CAIad,QAAQ,CAACgB,SAJtB,EAIiC,CAACL,KAAD,EAAOM,MAAP,KAAkB;MAC3CN,KAAK,CAACb,SAAN,GAAkB,KAAlB;MACAa,KAAK,CAACd,QAAN,GAAiB,IAAjB;MACAc,KAAK,CAACrB,IAAN,GAAa2B,MAAM,CAACC,OAApB;IACH,CARL,EASKJ,OATL,CASad,QAAQ,CAACmB,QATtB,EASgC,CAACR,KAAD,EAAQM,MAAR,KAAmB;MAC3CN,KAAK,CAACb,SAAN,GAAkB,KAAlB;MACAa,KAAK,CAACf,OAAN,GAAgB,IAAhB;MACAe,KAAK,CAACZ,OAAN,GAAgBkB,MAAM,CAACC,OAAvB;MACAP,KAAK,CAACrB,IAAN,GAAa,IAAb;IACH,CAdL;EAeH;AA5BgC,CAAD,CAA7B,C,CA+BP;AAEA;AACA"},"metadata":{},"sourceType":"module"}