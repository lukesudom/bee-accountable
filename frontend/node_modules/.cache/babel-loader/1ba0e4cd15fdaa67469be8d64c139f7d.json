{"ast":null,"code":"import { useReducer, useState, useEffect, createElement } from 'react';\nvar styles = {\n  \"progress-bar-wrapper\": \"_53Ji7\",\n  \"step-progress-bar\": \"_1Lo2h\",\n  \"progress-step\": \"_2Jtxm\",\n  \"step-index\": \"_2kL0S\",\n  \"step-icon\": \"_2JvrO\",\n  \"step-label\": \"_1hzhf\",\n  \"step-label-subtitle\": \"_1ixJ3\",\n  \"completed\": \"_2ZUAI\",\n  \"spring-down\": \"_3SDnc\",\n  \"current\": \"_35Ago\",\n  \"spring-up\": \"_JAh3L\",\n  \"has-error\": \"_1CcaK\",\n  \"shake\": \"_1ujce\",\n  \"step-content\": \"_2_g61\",\n  \"step-buttons\": \"_3uApM\",\n  \"step-action-btn\": \"_2pGos\",\n  \"action-btn-secondary\": \"_3CDiP\",\n  \"action-btn-primary\": \"_hsN1w\",\n  \"disabled\": \"_2RWmX\"\n};\nvar StepStates;\n\n(function (StepStates) {\n  StepStates[\"NOT_STARTED\"] = \"not_started\";\n  StepStates[\"CURRENT\"] = \"current\";\n  StepStates[\"ERROR\"] = \"error\";\n  StepStates[\"COMPLETED\"] = \"completed\";\n})(StepStates || (StepStates = {}));\n\nfunction stepsReducer(steps, action) {\n  return steps.map(function (step, i) {\n    if (i < action.payload.index) {\n      step.state = StepStates.COMPLETED;\n    } else if (i === action.payload.index) {\n      step.state = action.payload.state;\n    } else {\n      step.state = StepStates.NOT_STARTED;\n    }\n\n    return step;\n  });\n}\n\nfunction StepProgressBar(props) {\n  var steps = props.steps,\n      startingStep = props.startingStep,\n      wrapperClass = props.wrapperClass,\n      progressClass = props.progressClass,\n      stepClass = props.stepClass,\n      labelClass = props.labelClass,\n      subtitleClass = props.subtitleClass,\n      contentClass = props.contentClass,\n      buttonWrapperClass = props.buttonWrapperClass,\n      primaryBtnClass = props.primaryBtnClass,\n      secondaryBtnClass = props.secondaryBtnClass,\n      submitBtnName = props.submitBtnName,\n      onSubmit = props.onSubmit,\n      previousBtnName = props.previousBtnName,\n      nextBtnName = props.nextBtnName;\n\n  var _React$useReducer = useReducer(stepsReducer, steps),\n      state = _React$useReducer[0],\n      dispatch = _React$useReducer[1];\n\n  var _React$useState = useState(startingStep),\n      currentIndex = _React$useState[0],\n      setCurrentIndex = _React$useState[1];\n\n  useEffect(function () {\n    dispatch({\n      type: 'init',\n      payload: {\n        index: currentIndex,\n        state: StepStates.CURRENT\n      }\n    });\n  }, []);\n\n  function submitHandler() {\n    onSubmit();\n  }\n\n  function nextHandler() {\n    if (currentIndex === steps.length - 1) {\n      return;\n    }\n\n    var isStateValid = true;\n    var stepValidator = state[currentIndex].validator;\n\n    if (stepValidator) {\n      isStateValid = stepValidator();\n    }\n\n    dispatch({\n      type: 'next',\n      payload: {\n        index: isStateValid ? currentIndex + 1 : currentIndex,\n        state: isStateValid ? StepStates.CURRENT : StepStates.ERROR\n      }\n    });\n\n    if (isStateValid) {\n      setCurrentIndex(currentIndex + 1);\n    }\n  }\n\n  function prevHandler() {\n    if (currentIndex === 0) {\n      return;\n    }\n\n    dispatch({\n      type: 'previous',\n      payload: {\n        index: currentIndex - 1,\n        state: StepStates.CURRENT\n      }\n    });\n    setCurrentIndex(currentIndex - 1);\n  }\n\n  return createElement(\"div\", {\n    className: styles['progress-bar-wrapper'] + \" \" + (wrapperClass || '')\n  }, createElement(\"ul\", {\n    className: styles['step-progress-bar'] + \" \" + (progressClass || '')\n  }, state.map(function (step, i) {\n    return createElement(\"li\", {\n      key: i,\n      className: \"\" + styles['progress-step'] + (step.state === StepStates.COMPLETED ? \" \" + styles.completed : '') + (step.state === StepStates.CURRENT ? \" \" + styles.current : '') + (step.state === StepStates.ERROR ? \" \" + styles['has-error'] : '') + \" \" + (stepClass || '')\n    }, step.state === StepStates.COMPLETED && createElement(\"span\", {\n      className: styles['step-icon']\n    }, createElement(\"svg\", {\n      width: \"1.5rem\",\n      viewBox: \"0 0 13 9\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }, createElement(\"path\", {\n      d: \"M1 3.5L4.5 7.5L12 1\",\n      stroke: \"white\",\n      strokeWidth: \"1.5\"\n    }))), step.state === StepStates.ERROR && createElement(\"span\", {\n      className: styles['step-icon']\n    }, \"!\"), step.state !== StepStates.COMPLETED && step.state !== StepStates.ERROR && createElement(\"span\", {\n      className: styles['step-index']\n    }, i + 1), createElement(\"div\", {\n      className: styles['step-label'] + \" \" + (labelClass || '')\n    }, step.label, step.subtitle && createElement(\"div\", {\n      className: styles['step-label-subtitle'] + \" \" + (subtitleClass || '')\n    }, step.subtitle)));\n  })), createElement(\"div\", {\n    className: styles['step-content'] + \" \" + (contentClass || '')\n  }, state[currentIndex].content), createElement(\"div\", {\n    className: styles['step-buttons'] + \" \" + (buttonWrapperClass || '')\n  }, createElement(\"a\", {\n    className: styles['step-action-btn'] + \" \" + styles['action-btn-secondary'] + \" \" + (currentIndex === 0 ? styles.disabled : '') + \" \" + (secondaryBtnClass || ''),\n    onClick: prevHandler\n  }, previousBtnName ? previousBtnName : 'Previous'), currentIndex === state.length - 1 ? createElement(\"a\", {\n    className: styles['step-action-btn'] + \" \" + styles['action-btn-primary'] + \" \" + (primaryBtnClass || ''),\n    onClick: submitHandler\n  }, submitBtnName || 'Submit') : createElement(\"a\", {\n    className: styles['step-action-btn'] + \" \" + styles['action-btn-primary'] + \" \" + (primaryBtnClass || ''),\n    onClick: nextHandler\n  }, nextBtnName ? nextBtnName : 'Next')));\n}\n\nexport default StepProgressBar;","map":{"version":3,"mappings":"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","names":["StepStates","stepsReducer","steps","action","map","step","i","payload","index","state","COMPLETED","NOT_STARTED","StepProgressBar","props","startingStep","wrapperClass","progressClass","stepClass","labelClass","subtitleClass","contentClass","buttonWrapperClass","primaryBtnClass","secondaryBtnClass","submitBtnName","onSubmit","previousBtnName","nextBtnName","React","dispatch","currentIndex","setCurrentIndex","type","CURRENT","submitHandler","nextHandler","length","isStateValid","stepValidator","validator","ERROR","prevHandler","className","styles","key","completed","current","width","viewBox","fill","xmlns","d","stroke","strokeWidth","label","subtitle","content","disabled","onClick"],"sources":["C:\\Users\\Luke\\Desktop\\MERN Project\\node_modules\\react-step-progress\\src\\models\\index.ts","C:\\Users\\Luke\\Desktop\\MERN Project\\node_modules\\react-step-progress\\src\\index.tsx"],"sourcesContent":["export enum StepStates {\n  NOT_STARTED = 'not_started',\n  CURRENT = 'current',\n  ERROR = 'error',\n  COMPLETED = 'completed'\n}\n\nexport interface ProgressStep {\n  label: string;\n  subtitle?: string;\n  name: string;\n  state?: StepStates;\n  content: React.ReactNode;\n  validator?: (payload?: any) => boolean;\n}\n\nexport interface StepProgressProps {\n  steps: ProgressStep[];\n  startingStep: number;\n  wrapperClass?: string;\n  progressClass?: string;\n  stepClass?: string;\n  labelClass?: string;\n  subtitleClass?: string;\n  contentClass?: string;\n  buttonWrapperClass?: string;\n  primaryBtnClass?: string;\n  secondaryBtnClass?: string;\n  submitBtnName?: string;\n  onSubmit: Function;\n  previousBtnName?: string;\n  nextBtnName?: string;\n}\n\nexport interface ReducerAction {\n  type: string;\n  payload: { index: number; state: StepStates };\n}\n","import * as React from 'react';\nimport styles from './styles.module.css';\n\nimport { StepStates, ProgressStep, StepProgressProps, ReducerAction } from './models';\n\nfunction stepsReducer(steps: ProgressStep[], action: ReducerAction): ProgressStep[] {\n\n  return steps.map(function (step, i) {\n\n    if (i < action.payload.index) {\n      step.state = StepStates.COMPLETED;\n    } else if (i === action.payload.index) {\n      step.state = action.payload.state;\n    } else {\n      step.state = StepStates.NOT_STARTED;\n    }\n    return step;\n  });\n}\n\nfunction StepProgressBar(props: StepProgressProps): JSX.Element {\n  const {\n    steps,\n    startingStep,\n    wrapperClass,\n    progressClass,\n    stepClass,\n    labelClass,\n    subtitleClass,\n    contentClass,\n    buttonWrapperClass,\n    primaryBtnClass,\n    secondaryBtnClass,\n    submitBtnName,\n    onSubmit,\n    previousBtnName,\n    nextBtnName\n  } = props;\n  const [state, dispatch] = React.useReducer(stepsReducer, steps);\n  const [currentIndex, setCurrentIndex] = React.useState(startingStep);\n\n  React.useEffect(function () {\n    dispatch({\n      type: 'init',\n      payload: { index: currentIndex, state: StepStates.CURRENT }\n    });\n  }, []);\n\n  function submitHandler(): void {\n    onSubmit();\n  }\n\n  function nextHandler(): void {\n\n    if (currentIndex === steps.length - 1) {\n      return;\n    }\n    let isStateValid = true;\n    const stepValidator = state[currentIndex].validator;\n\n    if (stepValidator) {\n      isStateValid = stepValidator();\n    }\n    dispatch({\n      type: 'next',\n      payload: {\n        index: isStateValid ? currentIndex + 1 : currentIndex,\n        state: isStateValid ? StepStates.CURRENT : StepStates.ERROR\n      }\n    });\n\n    if (isStateValid) {\n      setCurrentIndex(currentIndex + 1);\n    }\n  }\n\n  function prevHandler(): void {\n\n    if (currentIndex === 0) {\n      return;\n    }\n\n    dispatch({\n      type: 'previous',\n      payload: {\n        index: currentIndex - 1,\n        state: StepStates.CURRENT\n      }\n    });\n    setCurrentIndex(currentIndex - 1);\n  }\n\n  return (\n    <div className={`${styles['progress-bar-wrapper']} ${wrapperClass || ''}`}>\n      <ul className={`${styles['step-progress-bar']} ${progressClass || ''}`}>\n        {state.map(function (step, i) {\n          return (\n            <li\n              key={i}\n              className={`${styles['progress-step']}${\n                step.state === StepStates.COMPLETED ? ` ${styles.completed}` : ''\n              }${step.state === StepStates.CURRENT ? ` ${styles.current}` : ''}${\n                step.state === StepStates.ERROR ? ` ${styles['has-error']}` : ''\n              } ${stepClass || ''}`}\n            >\n              {step.state === StepStates.COMPLETED && (\n                <span className={styles['step-icon']}>\n                  <svg\n                    width=\"1.5rem\"\n                    viewBox=\"0 0 13 9\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path d=\"M1 3.5L4.5 7.5L12 1\" stroke=\"white\" strokeWidth=\"1.5\" />\n                  </svg>\n                </span>\n              )}\n              {step.state === StepStates.ERROR && <span className={styles['step-icon']}>!</span>}\n              {step.state !== StepStates.COMPLETED && step.state !== StepStates.ERROR && (\n                <span className={styles['step-index']}>{i + 1}</span>\n              )}\n              <div className={`${styles['step-label']} ${labelClass || ''}`}>\n                {step.label}\n                {step.subtitle && (\n                  <div className={`${styles['step-label-subtitle']} ${subtitleClass || ''}`}>\n                    {step.subtitle}\n                  </div>\n                )}\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n\n      <div className={`${styles['step-content']} ${contentClass || ''}`}>\n        {state[currentIndex].content}\n      </div>\n\n      <div className={`${styles['step-buttons']} ${buttonWrapperClass || ''}`}>\n        <a\n          className={`${styles['step-action-btn']} ${styles['action-btn-secondary']} ${\n            currentIndex === 0 ? styles.disabled : ''\n          } ${secondaryBtnClass || ''}`}\n          onClick={prevHandler}\n        >\n          {previousBtnName ? previousBtnName : 'Previous'}\n        </a>\n        {currentIndex === state.length - 1 ? (\n          <a\n            className={`${styles['step-action-btn']} ${styles['action-btn-primary']} ${\n              primaryBtnClass || ''\n            }`}\n            onClick={submitHandler}\n          >\n            {submitBtnName || 'Submit'}\n          </a>\n        ) : (\n          <a\n            className={`${styles['step-action-btn']} ${styles['action-btn-primary']} ${\n              primaryBtnClass || ''\n            }`}\n            onClick={nextHandler}\n          >\n            {nextBtnName ? nextBtnName : 'Next'}\n          </a>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default StepProgressBar;\n"]},"metadata":{},"sourceType":"module"}